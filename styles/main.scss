$hop1zuo1_height: 140px;
$stususn: 0.8093s;

img.step_tam {
  z-index: 500;
  position: absolute;
  top: 90px + $hop1zuo1_height;
  left: -500px;
  animation: steptam1 1 * $stususn ease;
}

@keyframes steptam1 {
  0% {
    left: 900px;
  }
  33% {
    left: 200px;
  }
  66% {
    left: 200px;
  }
  100% {
    left: -500px;
  }
}

img.water_entry {
  z-index: 500;
  position: absolute;
  top: 190px + $hop1zuo1_height;
  left: -500px;
  animation: water1 1 * $stususn ease;
}

@keyframes water1 {
  0% {
    left: 700px;
  }
  33% {
    left: 100px;
  }
  66% {
    left: 100px;
  }
  100% {
    left: -500px;
  }
}

/* This value must be the same as the one given in `createArrowSvg` of `src/create_html_element.ts` */
$field_migration_to_the_left: 65px;

#field {
  width: 631px;
  height: 631px + $hop1zuo1_height * 2;
  position: absolute;
  top: 20px;
  left: 20px - $field_migration_to_the_left;
}

#protective_cover_over_field {
  background-color: rgba(0, 0, 0, 0.5);
  width: 631px;
  height: 631px + $hop1zuo1_height * 2;
  position: absolute;
  top: 20px;
  left: 20px - $field_migration_to_the_left;
}

#final_score_display {
  position: absolute;
  top: 250px;
  left: 11px - $field_migration_to_the_left;
  height: 450px;
  width: 650px;
  background-color: rgba(1, 1, 1, 0.7);
  z-index: 2000;
}

#score_display {
  position: absolute;
  top: 250px;
  left: 11px - $field_migration_to_the_left;
  height: 450px;
  width: 650px;
  background-color: rgba(1, 1, 1, 0.7);
  z-index: 2000;
}

#protective_cover_over_field_while_asyncawait {
  background-color: rgba(0, 0, 0, 0);
  width: 631px;
  height: 631px + $hop1zuo1_height * 2;
  position: absolute;
  top: 20px;
  left: 20px - $field_migration_to_the_left;
  z-index: 999;
}

#protective_cover_over_field_while_waiting_for_opponent {
  background-color: rgba(0, 0, 0, 0);
  width: 631px;
  height: 631px + $hop1zuo1_height * 2;
  position: absolute;
  top: 20px;
  left: 20px - $field_migration_to_the_left;
  z-index: 999;
  cursor: not-allowed;
}

#my_icon {
  position: absolute;
  left: 680px;
  top: 700px;
}

#larta_opponent {
  position: absolute;
  left: 680px;
  top: 0px;
}

#protective_tam_cover_over_field {
  background-color: rgba(0, 82, 66, 0.5);
  width: 631px;
  height: 631px + $hop1zuo1_height * 2;
  position: absolute;
  top: 20px;
  left: 20px - $field_migration_to_the_left;
}

.nocover {
  display: none;
}

#hop1zuo1_of_downward {
  background-color: rgb(0, 255, 200);
  width: 631px;
  height: $hop1zuo1_height;
  position: relative;
}

#hop1zuo1_of_upward {
  width: 631px;
  height: $hop1zuo1_height;
  position: relative;
}

/*
The element `hop1zuo1_of_upward_bg` needs to exist independently from `hop1zuo1_of_upward` due to the following reason.
First, we have to render the background color rgb(0, 255, 200) underneath the `contains_coord_annotation`.
But `contains_coord_annotation` cannot have a positive z-index, 
because a positive z-index will cover up the pieces on the board and will prevent the player from clicking a piece.
On the other hand, `hop1zuo1_of_upward` cannot have a negative z-index,
because a negative z-index will make hop1zuo1 unclickable.
Hence the only solution is to render the background color in a separate HTML element.

要素 `hop1zuo1_of_upward_bg` が `hop1zuo1_of_upward` とは独立して存在する必要がある。
なぜかというと、背景色 rgb(0, 255, 200) を `contains_coord_annotation` の下にレンダリングする必要があるが、
`contains_coord_annotation` に正の z-index を持たせてしまうと、
それが盤上の駒を覆ってしまってプレイヤーが駒ををクリックできなくなってしまう。
一方、`hop1zuo1_of_upward` に負の z-index を設定すると、手駒がクリックできなくなってしまう。
したがって、背景色を別のHTML要素でレンダリングするしかない。
*/
#hop1zuo1_of_upward_bg {
  background-color: rgb(0, 255, 200);
  width: 631px;
  height: $hop1zuo1_height;
  position: absolute;
  top: 0px;
  left: 0px;
  z-index: -2;
}

#kait_kaik {
  z-index: 3000;
  position: absolute;
  left: 235px - $field_migration_to_the_left;
  top: 415px;
}

$kaitkaik_width: 200px;
$kaitkaik_ratio: 1146 / 2025;

#kait_kaik_button {
  background-color: #d0d0d0;
  position: absolute;
  border: 1px solid #aaaaaa;
  max-width: $kaitkaik_width;
  width: $kaitkaik_width;
  height: $kaitkaik_width * $kaitkaik_ratio;
}

$kaitkaik_hover_width: 220px;
#kait_kaik:hover {
  z-index: 3000;
  position: absolute;
  left: 235px - $field_migration_to_the_left - ($kaitkaik_hover_width - $kaitkaik_width) / 2;
  top: 415px - ($kaitkaik_hover_width - $kaitkaik_width) * $kaitkaik_ratio / 2;
}

#kait_kaik_button:hover {
  background-color: #e7e7e7;
  position: absolute;
  border: 1px solid #aaaaaa;
  max-width: $kaitkaik_hover_width;
  width: $kaitkaik_hover_width;
  height: auto;
}

/* As written in public/image/toggle/README.txt, the aspect ratio must be exactly 1:2 */
$toggle_buttons_ratio: 2;
$toggle_buttons_left: 695px;
$toggle_buttons_width: 44px;
$toggle_buttons_hover_width: 44px * 1.1;

$coord_toggle_default_top: 346px;
$krut_cruop_default_top: 503px;
$lork_liar_default_top: 660px;

#coord_toggle {
  z-index: 3000;
  position: absolute;
  left: $toggle_buttons_left;
  top: $coord_toggle_default_top;
}

#coord_toggle_button {
  position: absolute;
  max-width: $toggle_buttons_width;
  width: $toggle_buttons_width;
  height: $toggle_buttons_width * $toggle_buttons_ratio;
}

#coord_toggle:hover {
  z-index: 3000;
  position: absolute;
  left: $toggle_buttons_left - ($toggle_buttons_hover_width - $toggle_buttons_width) / 2;
  top: $coord_toggle_default_top - ($toggle_buttons_hover_width - $toggle_buttons_width) * $toggle_buttons_ratio /
    2;
}

#coord_toggle_button:hover {
  position: absolute;
  max-width: $toggle_buttons_hover_width;
  width: $toggle_buttons_hover_width;
  height: auto;
}

#krut_cruop {
  z-index: 3000;
  position: absolute;
  left: $toggle_buttons_left;
  top: $krut_cruop_default_top;
}

#krut_cruop_button {
  position: absolute;
  max-width: $toggle_buttons_width;
  width: $toggle_buttons_width;
  height: $toggle_buttons_width * $toggle_buttons_ratio;
}

#krut_cruop:hover {
  z-index: 3000;
  position: absolute;
  left: $toggle_buttons_left - ($toggle_buttons_hover_width - $toggle_buttons_width) / 2;
  top: $krut_cruop_default_top - ($toggle_buttons_hover_width - $toggle_buttons_width) * $toggle_buttons_ratio /
    2;
}

#krut_cruop_button:hover {
  position: absolute;
  max-width: $toggle_buttons_hover_width;
  width: $toggle_buttons_hover_width;
  height: auto;
}

#lork_liar {
  z-index: 3000;
  position: absolute;
  left: $toggle_buttons_left;
  top: $lork_liar_default_top;
}

#lork_liar_button {
  position: absolute;
  max-width: $toggle_buttons_width;
  width: $toggle_buttons_width;
  height: $toggle_buttons_width * $toggle_buttons_ratio;
}

#lork_liar:hover {
  z-index: 3000;
  position: absolute;
  left: $toggle_buttons_left - ($toggle_buttons_hover_width - $toggle_buttons_width) / 2;
  top: $lork_liar_default_top - ($toggle_buttons_hover_width - $toggle_buttons_width) * $toggle_buttons_ratio /
    2;
}

#lork_liar_button:hover {
  position: absolute;
  max-width: $toggle_buttons_hover_width;
  width: $toggle_buttons_hover_width;
  height: auto;
}

#everything {
  position: absolute;
  left: 200px;
}

#denote_season {
  position: absolute;
  left: 3px;
}

#denote_score {
  position: absolute;
  left: 65px;
}

#scoreboard_containment {
  position: absolute;
  left: -215px - $field_migration_to_the_left;
  top: 19.5px;
}

#board_containment {
  width: 631px;
  height: 631px;
  position: relative;
}
#board {
  position: absolute;
  top: 0px;
  left: 0px;
}

#kiar_ark {
  position: absolute;
  left: 1020px;
  top: 15px;
  width: 425px;
  height: 910px;
  font-size: 120%;
}

.selection {
  position: absolute;
  animation: anime1 $stususn ease -2 * $stususn infinite alternate;
}

img.guide {
  position: absolute;
  animation: anime2 $stususn ease -2 * $stususn infinite alternate;
}

@keyframes anime1 {
  0% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

@keyframes anime2 {
  0% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.7;
  }
}

img.piece_image_on_board {
  position: absolute;
}

img.piece_image_on_hop1zuo1 {
  position: absolute;
}

#opponent_message {
  width: 256px;
  max-width: 256px;
  text-align: center;
  font-size: 20px;
}

@font-face {
  font-family: "geometric_linzklar";
  src: url("https://sozysozbot.github.io/geometric_linzklar/fonts/geometric_linzklar.ttf")
      format("truetype"),
    url("https://sozysozbot.github.io/geometric_linzklar/fonts/geometric_linzklar.woff")
      format("woff");
}
